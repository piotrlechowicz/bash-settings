# Uncomment this if you want to use vi settings in your bash console
#$if Bash
#	#show the vi mode in terminal
#	set show-mode-in-prompt on
#
#	# Use Vi style editing
#	set editing-mode vi
#
#	# Show all completions after single tab
#	set show-all-if-ambiguous on
#	# ignore case of input while tab pressing
#	set completion-ignore-case on
#	# on menu-complete, first display the common prefix, then cycle through the options when hitting TAB
#	set menu-complete-display-prefix on
#
##############################
#	# Keymaps for command mode 
#	set keymap vi-command
#
#	# insert the arguments from the last command - ???
#       "p": "i !!*\r"
#	set bind '"\e."':yank-last-arg
#
#	# When hitting option-up/option-down, cycle through the previous commands
#	# which start with the prefix you've entered 
#	"\e\e[A": history-search-backward
#	"\e\e[B": history-search-forward
#
###########################################################
#	# Keymaps for insert mode
#	set keymap vi-insert
#
#	# Pressing tab will list all completions & select the first one. Pressing it 
#	# again will cycle through available completions.
#	TAB: menu-complete
#	#Shift-TAB cycles completions backward
#	"\e[Z": menu-complete-backward
#
#	# Option-up/option-down should also apply to insert mode
#	"\e\e[A": history-search-backward
#	"\e\e[B": history-search-forward
#
#	# Needed because binding 'p' in command mode above wipes its insert mode
#	# function, too. This fixes that, and will insert 'p' when you type 'p'.
#	"p": self-insert
#$endif
#######################################

# settings for normal bash console (with emacs like typing)
$if Bash
	set show-all-if-ambiguous on
	# ignore case of input while tab pressing
	set completion-ignore-case on
	# on menu-complete, first display the common prefix, then cycle through the options when hitting TAB
	set menu-complete-display-prefix on
	
	# Pressing tab will list all completions & select the first one. Pressing it 
	# again will cycle through available completions.
	TAB: menu-complete
	#Shift-TAB cycles completions backward
	"\e[Z": menu-complete-backward
	
$endif
